/*
* generated by Xtext
*/
grammar InternalPaloma;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.xtext.edinburgh.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.edinburgh.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.edinburgh.services.PalomaGrammarAccess;

}

@parser::members {

 	private PalomaGrammarAccess grammarAccess;
 	
    public InternalPalomaParser(TokenStream input, PalomaGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected PalomaGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='#params' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getModelAccess().getParamsKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getParamsParamParserRuleCall_1_0()); 
	    }
		lv_params_1_0=ruleParam		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_1_0, 
        		"Param");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_2='#states' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getModelAccess().getStatesKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getStatesAgentStateParserRuleCall_3_0()); 
	    }
		lv_states_3_0=ruleAgentState		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"states",
        		lv_states_3_0, 
        		"AgentState");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_4='#agents' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getModelAccess().getAgentsKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getPopulationPOPULATIONParserRuleCall_5_0()); 
	    }
		lv_population_5_0=rulePOPULATION		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		set(
       			$current, 
       			"population",
        		lv_population_5_0, 
        		"POPULATION");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleParam
entryRuleParam returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParamRule()); }
	 iv_ruleParam=ruleParam 
	 { $current=$iv_ruleParam.current; } 
	 EOF 
;

// Rule Param
ruleParam returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='param' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getParamAccess().getParamKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getParamAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getParamRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getParamAccess().getEqualsSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParamAccess().getValueMATH_ExprParserRuleCall_3_0()); 
	    }
		lv_value_3_0=ruleMATH_Expr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParamRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"MATH_Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getParamAccess().getSemicolonKeyword_4());
    }
)
;





// Entry rule entryRuleAgentState
entryRuleAgentState returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAgentStateRule()); }
	 iv_ruleAgentState=ruleAgentState 
	 { $current=$iv_ruleAgentState.current; } 
	 EOF 
;

// Rule AgentState
ruleAgentState returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAgentStateAccess().getNameAGENTParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleAGENT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAgentStateRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"AGENT");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1=':=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAgentStateAccess().getColonEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAgentStateAccess().getPrefixsPrefixParserRuleCall_2_0()); 
	    }
		lv_prefixs_2_0=rulePrefix		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAgentStateRule());
	        }
       		add(
       			$current, 
       			"prefixs",
        		lv_prefixs_2_0, 
        		"Prefix");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3='+' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAgentStateAccess().getPlusSignKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAgentStateAccess().getPrefixsPrefixParserRuleCall_3_1_0()); 
	    }
		lv_prefixs_4_0=rulePrefix		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAgentStateRule());
	        }
       		add(
       			$current, 
       			"prefixs",
        		lv_prefixs_4_0, 
        		"Prefix");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getAgentStateAccess().getSemicolonKeyword_4());
    }
)
;





// Entry rule entryRulePrefix
entryRulePrefix returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrefixRule()); }
	 iv_rulePrefix=rulePrefix 
	 { $current=$iv_rulePrefix.current; } 
	 EOF 
;

// Rule Prefix
rulePrefix returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getPrefixAccess().getActionACTIONParserRuleCall_0_0()); 
	    }
		lv_action_0_0=ruleACTION		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrefixRule());
	        }
       		set(
       			$current, 
       			"action",
        		lv_action_0_0, 
        		"ACTION");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPrefixAccess().getContinueAGENTParserRuleCall_1_0()); 
	    }
		lv_continue_1_0=ruleAGENT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrefixRule());
	        }
       		set(
       			$current, 
       			"continue",
        		lv_continue_1_0, 
        		"AGENT");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleACTION
entryRuleACTION returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getACTIONRule()); }
	 iv_ruleACTION=ruleACTION 
	 { $current=$iv_ruleACTION.current; } 
	 EOF 
;

// Rule ACTION
ruleACTION returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getACTIONAccess().getACT_SpNoMsgParserRuleCall_0()); 
    }
    this_ACT_SpNoMsg_0=ruleACT_SpNoMsg
    { 
        $current = $this_ACT_SpNoMsg_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getACTIONAccess().getACT_SpBrParserRuleCall_1()); 
    }
    this_ACT_SpBr_1=ruleACT_SpBr
    { 
        $current = $this_ACT_SpBr_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getACTIONAccess().getACT_SpUniParserRuleCall_2()); 
    }
    this_ACT_SpUni_2=ruleACT_SpUni
    { 
        $current = $this_ACT_SpUni_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getACTIONAccess().getACT_InBrParserRuleCall_3()); 
    }
    this_ACT_InBr_3=ruleACT_InBr
    { 
        $current = $this_ACT_InBr_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getACTIONAccess().getACT_InUniParserRuleCall_4()); 
    }
    this_ACT_InUni_4=ruleACT_InUni
    { 
        $current = $this_ACT_InUni_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleACT_SpNoMsg
entryRuleACT_SpNoMsg returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getACT_SpNoMsgRule()); }
	 iv_ruleACT_SpNoMsg=ruleACT_SpNoMsg 
	 { $current=$iv_ruleACT_SpNoMsg.current; } 
	 EOF 
;

// Rule ACT_SpNoMsg
ruleACT_SpNoMsg returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getACT_SpNoMsgAccess().getLeftParenthesisKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getACT_SpNoMsgAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getACT_SpNoMsgRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getACT_SpNoMsgAccess().getCommaKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getACT_SpNoMsgAccess().getRateRATE_ExprParserRuleCall_3_0()); 
	    }
		lv_rate_3_0=ruleRATE_Expr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getACT_SpNoMsgRule());
	        }
       		set(
       			$current, 
       			"rate",
        		lv_rate_3_0, 
        		"RATE_Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getACT_SpNoMsgAccess().getRightParenthesisKeyword_4());
    }
	otherlv_5='.' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getACT_SpNoMsgAccess().getFullStopKeyword_5());
    }
)
;





// Entry rule entryRuleACT_SpBr
entryRuleACT_SpBr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getACT_SpBrRule()); }
	 iv_ruleACT_SpBr=ruleACT_SpBr 
	 { $current=$iv_ruleACT_SpBr.current; } 
	 EOF 
;

// Rule ACT_SpBr
ruleACT_SpBr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='!(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getACT_SpBrAccess().getExclamationMarkLeftParenthesisKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getACT_SpBrAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getACT_SpBrRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getACT_SpBrAccess().getCommaKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getACT_SpBrAccess().getRateRATE_ExprParserRuleCall_3_0()); 
	    }
		lv_rate_3_0=ruleRATE_Expr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getACT_SpBrRule());
	        }
       		set(
       			$current, 
       			"rate",
        		lv_rate_3_0, 
        		"RATE_Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')@' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getACT_SpBrAccess().getRightParenthesisCommercialAtKeyword_4());
    }
	otherlv_5='IR' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getACT_SpBrAccess().getIRKeyword_5());
    }
	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getACT_SpBrAccess().getLeftCurlyBracketKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getACT_SpBrAccess().getRangeIRangeParserRuleCall_7_0()); 
	    }
		lv_range_7_0=ruleIRange		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getACT_SpBrRule());
	        }
       		set(
       			$current, 
       			"range",
        		lv_range_7_0, 
        		"IRange");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='}.' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getACT_SpBrAccess().getRightCurlyBracketFullStopKeyword_8());
    }
)
;





// Entry rule entryRuleACT_SpUni
entryRuleACT_SpUni returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getACT_SpUniRule()); }
	 iv_ruleACT_SpUni=ruleACT_SpUni 
	 { $current=$iv_ruleACT_SpUni.current; } 
	 EOF 
;

// Rule ACT_SpUni
ruleACT_SpUni returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='!!(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getACT_SpUniAccess().getExclamationMarkExclamationMarkLeftParenthesisKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getACT_SpUniAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getACT_SpUniRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getACT_SpUniAccess().getCommaKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getACT_SpUniAccess().getRateRATE_ExprParserRuleCall_3_0()); 
	    }
		lv_rate_3_0=ruleRATE_Expr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getACT_SpUniRule());
	        }
       		set(
       			$current, 
       			"rate",
        		lv_rate_3_0, 
        		"RATE_Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')@' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getACT_SpUniAccess().getRightParenthesisCommercialAtKeyword_4());
    }
	otherlv_5='IR' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getACT_SpUniAccess().getIRKeyword_5());
    }
	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getACT_SpUniAccess().getLeftCurlyBracketKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getACT_SpUniAccess().getRangeIRangeParserRuleCall_7_0()); 
	    }
		lv_range_7_0=ruleIRange		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getACT_SpUniRule());
	        }
       		set(
       			$current, 
       			"range",
        		lv_range_7_0, 
        		"IRange");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='}.' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getACT_SpUniAccess().getRightCurlyBracketFullStopKeyword_8());
    }
)
;





// Entry rule entryRuleACT_InBr
entryRuleACT_InBr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getACT_InBrRule()); }
	 iv_ruleACT_InBr=ruleACT_InBr 
	 { $current=$iv_ruleACT_InBr.current; } 
	 EOF 
;

// Rule ACT_InBr
ruleACT_InBr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='?(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getACT_InBrAccess().getQuestionMarkLeftParenthesisKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getACT_InBrAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getACT_InBrRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getACT_InBrAccess().getCommaKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getACT_InBrAccess().getRateRATE_ExprParserRuleCall_3_0()); 
	    }
		lv_rate_3_0=ruleRATE_Expr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getACT_InBrRule());
	        }
       		set(
       			$current, 
       			"rate",
        		lv_rate_3_0, 
        		"RATE_Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')@' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getACT_InBrAccess().getRightParenthesisCommercialAtKeyword_4());
    }
	otherlv_5='Pr' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getACT_InBrAccess().getPrKeyword_5());
    }
	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getACT_InBrAccess().getLeftCurlyBracketKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getACT_InBrAccess().getValuePR_ExprParserRuleCall_7_0()); 
	    }
		lv_value_7_0=rulePR_Expr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getACT_InBrRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_7_0, 
        		"PR_Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='}.' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getACT_InBrAccess().getRightCurlyBracketFullStopKeyword_8());
    }
)
;





// Entry rule entryRuleACT_InUni
entryRuleACT_InUni returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getACT_InUniRule()); }
	 iv_ruleACT_InUni=ruleACT_InUni 
	 { $current=$iv_ruleACT_InUni.current; } 
	 EOF 
;

// Rule ACT_InUni
ruleACT_InUni returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='??(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getACT_InUniAccess().getQuestionMarkQuestionMarkLeftParenthesisKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getACT_InUniAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getACT_InUniRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getACT_InUniAccess().getCommaKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getACT_InUniAccess().getRateRATE_ExprParserRuleCall_3_0()); 
	    }
		lv_rate_3_0=ruleRATE_Expr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getACT_InUniRule());
	        }
       		set(
       			$current, 
       			"rate",
        		lv_rate_3_0, 
        		"RATE_Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')@' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getACT_InUniAccess().getRightParenthesisCommercialAtKeyword_4());
    }
	otherlv_5='Wt' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getACT_InUniAccess().getWtKeyword_5());
    }
	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getACT_InUniAccess().getLeftCurlyBracketKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getACT_InUniAccess().getValuePR_ExprParserRuleCall_7_0()); 
	    }
		lv_value_7_0=rulePR_Expr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getACT_InUniRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_7_0, 
        		"PR_Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='}.' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getACT_InUniAccess().getRightCurlyBracketFullStopKeyword_8());
    }
)
;





// Entry rule entryRuleIRange
entryRuleIRange returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIRangeRule()); }
	 iv_ruleIRange=ruleIRange 
	 { $current=$iv_ruleIRange.current; } 
	 EOF 
;

// Rule IRange
ruleIRange returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='local' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIRangeAccess().getLocalKeyword_0());
    }

    |	otherlv_1='all' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIRangeAccess().getAllKeyword_1());
    }

    |(	otherlv_2='range' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getIRangeAccess().getRangeKeyword_2_0());
    }
	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIRangeAccess().getLeftParenthesisKeyword_2_1());
    }

    { 
        newCompositeNode(grammarAccess.getIRangeAccess().getRATE_ExprParserRuleCall_2_2()); 
    }
    this_RATE_Expr_4=ruleRATE_Expr
    { 
        $current = $this_RATE_Expr_4.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getIRangeAccess().getRightParenthesisKeyword_2_3());
    }
)
    |(
    { 
        newCompositeNode(grammarAccess.getIRangeAccess().getLOCParserRuleCall_3_0()); 
    }
ruleLOC
    { 
        afterParserOrEnumRuleCall();
    }
(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getIRangeAccess().getCommaKeyword_3_1_0());
    }

    { 
        newCompositeNode(grammarAccess.getIRangeAccess().getLOCParserRuleCall_3_1_1()); 
    }
ruleLOC
    { 
        afterParserOrEnumRuleCall();
    }
)*))
;





// Entry rule entryRulePR_Expr
entryRulePR_Expr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPR_ExprRule()); }
	 iv_rulePR_Expr=rulePR_Expr 
	 { $current=$iv_rulePR_Expr.current; } 
	 EOF 
;

// Rule PR_Expr
rulePR_Expr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getPR_ExprAccess().getPrETerminal_PR_ExprParserRuleCall_0_0()); 
	    }
		lv_prE_0_0=ruleTerminal_PR_Expr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPR_ExprRule());
	        }
       		add(
       			$current, 
       			"prE",
        		lv_prE_0_0, 
        		"Terminal_PR_Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getPR_ExprAccess().getMATH_OPParserRuleCall_1_0()); 
    }
ruleMATH_OP
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPR_ExprAccess().getPrETerminal_PR_ExprParserRuleCall_1_1_0()); 
	    }
		lv_prE_2_0=ruleTerminal_PR_Expr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPR_ExprRule());
	        }
       		add(
       			$current, 
       			"prE",
        		lv_prE_2_0, 
        		"Terminal_PR_Expr");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleTerminal_PR_Expr
entryRuleTerminal_PR_Expr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTerminal_PR_ExprRule()); }
	 iv_ruleTerminal_PR_Expr=ruleTerminal_PR_Expr 
	 { $current=$iv_ruleTerminal_PR_Expr.current; } 
	 EOF 
;

// Rule Terminal_PR_Expr
ruleTerminal_PR_Expr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTerminal_PR_ExprAccess().getLeftParenthesisKeyword_0_0());
    }

    { 
        newCompositeNode(grammarAccess.getTerminal_PR_ExprAccess().getPR_ExprParserRuleCall_0_1()); 
    }
    this_PR_Expr_1=rulePR_Expr
    { 
        $current = $this_PR_Expr_1.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_2=')' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTerminal_PR_ExprAccess().getRightParenthesisKeyword_0_2());
    }
)
    |(
    { 
        newCompositeNode(grammarAccess.getTerminal_PR_ExprAccess().getNUMBERParserRuleCall_1_0()); 
    }
ruleNUMBER
    { 
        afterParserOrEnumRuleCall();
    }

    |(
(
		lv_linkedParam_4_0=RULE_ID
		{
			newLeafNode(lv_linkedParam_4_0, grammarAccess.getTerminal_PR_ExprAccess().getLinkedParamIDTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTerminal_PR_ExprRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"linkedParam",
        		lv_linkedParam_4_0, 
        		"ID");
	    }

)
)
    |
    { 
        newCompositeNode(grammarAccess.getTerminal_PR_ExprAccess().getDistParserRuleCall_1_2()); 
    }
ruleDist
    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTerminal_PR_ExprAccess().getAGENT_NUMParserRuleCall_1_3()); 
    }
    this_AGENT_NUM_6=ruleAGENT_NUM
    { 
        $current = $this_AGENT_NUM_6.current; 
        afterParserOrEnumRuleCall();
    }
))
;





// Entry rule entryRuleRATE_Expr
entryRuleRATE_Expr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRATE_ExprRule()); }
	 iv_ruleRATE_Expr=ruleRATE_Expr 
	 { $current=$iv_ruleRATE_Expr.current; } 
	 EOF 
;

// Rule RATE_Expr
ruleRATE_Expr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getRATE_ExprAccess().getRtTerminal_RATE_ExprParserRuleCall_0_0()); 
	    }
		lv_rt_0_0=ruleTerminal_RATE_Expr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRATE_ExprRule());
	        }
       		add(
       			$current, 
       			"rt",
        		lv_rt_0_0, 
        		"Terminal_RATE_Expr");
	        afterParserOrEnumRuleCall();
	    }

)
)(
    { 
        newCompositeNode(grammarAccess.getRATE_ExprAccess().getMATH_OPParserRuleCall_1_0()); 
    }
ruleMATH_OP
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRATE_ExprAccess().getRtTerminal_RATE_ExprParserRuleCall_1_1_0()); 
	    }
		lv_rt_2_0=ruleTerminal_RATE_Expr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRATE_ExprRule());
	        }
       		add(
       			$current, 
       			"rt",
        		lv_rt_2_0, 
        		"Terminal_RATE_Expr");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleTerminal_RATE_Expr
entryRuleTerminal_RATE_Expr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTerminal_RATE_ExprRule()); }
	 iv_ruleTerminal_RATE_Expr=ruleTerminal_RATE_Expr 
	 { $current=$iv_ruleTerminal_RATE_Expr.current; } 
	 EOF 
;

// Rule Terminal_RATE_Expr
ruleTerminal_RATE_Expr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTerminal_RATE_ExprAccess().getLeftParenthesisKeyword_0_0());
    }

    { 
        newCompositeNode(grammarAccess.getTerminal_RATE_ExprAccess().getRATE_ExprParserRuleCall_0_1()); 
    }
    this_RATE_Expr_1=ruleRATE_Expr
    { 
        $current = $this_RATE_Expr_1.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_2=')' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTerminal_RATE_ExprAccess().getRightParenthesisKeyword_0_2());
    }
)
    |(
    { 
        newCompositeNode(grammarAccess.getTerminal_RATE_ExprAccess().getNUMBERParserRuleCall_1_0()); 
    }
ruleNUMBER
    { 
        afterParserOrEnumRuleCall();
    }

    |(
(
		lv_linkedParam_4_0=RULE_ID
		{
			newLeafNode(lv_linkedParam_4_0, grammarAccess.getTerminal_RATE_ExprAccess().getLinkedParamIDTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTerminal_RATE_ExprRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"linkedParam",
        		lv_linkedParam_4_0, 
        		"ID");
	    }

)
)))
;





// Entry rule entryRuleDist
entryRuleDist returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getDistRule()); } 
	 iv_ruleDist=ruleDist 
	 { $current=$iv_ruleDist.current.getText(); }  
	 EOF 
;

// Rule Dist
ruleDist returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='dist' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDistAccess().getDistKeyword_0()); 
    }

	kw='(' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDistAccess().getLeftParenthesisKeyword_1()); 
    }
(
	kw='loc_s' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDistAccess().getLoc_sKeyword_2_0()); 
    }

    |
	kw='loc_r' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDistAccess().getLoc_rKeyword_2_1()); 
    }

    |
    { 
        newCompositeNode(grammarAccess.getDistAccess().getLOCParserRuleCall_2_2()); 
    }
    this_LOC_4=ruleLOC    {
		$current.merge(this_LOC_4);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
	kw=',' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDistAccess().getCommaKeyword_3()); 
    }
(
	kw='loc_s' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDistAccess().getLoc_sKeyword_4_0()); 
    }

    |
	kw='loc_r' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDistAccess().getLoc_rKeyword_4_1()); 
    }

    |
    { 
        newCompositeNode(grammarAccess.getDistAccess().getLOCParserRuleCall_4_2()); 
    }
    this_LOC_8=ruleLOC    {
		$current.merge(this_LOC_8);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
	kw=')' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDistAccess().getRightParenthesisKeyword_5()); 
    }
)
    ;





// Entry rule entryRuleAGENT_NUM
entryRuleAGENT_NUM returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAGENT_NUMRule()); }
	 iv_ruleAGENT_NUM=ruleAGENT_NUM 
	 { $current=$iv_ruleAGENT_NUM.current; } 
	 EOF 
;

// Rule AGENT_NUM
ruleAGENT_NUM returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='|' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAGENT_NUMAccess().getVerticalLineKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAGENT_NUMAccess().getTypeAGENTParserRuleCall_1_0()); 
	    }
		lv_type_1_0=ruleAGENT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAGENT_NUMRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"AGENT");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='|' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAGENT_NUMAccess().getVerticalLineKeyword_2());
    }
)
;





// Entry rule entryRulePOPULATION
entryRulePOPULATION returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPOPULATIONRule()); }
	 iv_rulePOPULATION=rulePOPULATION 
	 { $current=$iv_rulePOPULATION.current; } 
	 EOF 
;

// Rule POPULATION
rulePOPULATION returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getPOPULATIONAccess().getPopuAGENTSParserRuleCall_0_0()); 
	    }
		lv_popu_0_0=ruleAGENTS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPOPULATIONRule());
	        }
       		add(
       			$current, 
       			"popu",
        		lv_popu_0_0, 
        		"AGENTS");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1='||' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPOPULATIONAccess().getVerticalLineVerticalLineKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPOPULATIONAccess().getPopuAGENTSParserRuleCall_1_1_0()); 
	    }
		lv_popu_2_0=ruleAGENTS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPOPULATIONRule());
	        }
       		add(
       			$current, 
       			"popu",
        		lv_popu_2_0, 
        		"AGENTS");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleAGENTS
entryRuleAGENTS returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAGENTSRule()); }
	 iv_ruleAGENTS=ruleAGENTS 
	 { $current=$iv_ruleAGENTS.current; } 
	 EOF 
;

// Rule AGENTS
ruleAGENTS returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAGENTSAccess().getTypeAGENTParserRuleCall_0_0()); 
	    }
		lv_type_0_0=ruleAGENT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAGENTSRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_0, 
        		"AGENT");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAGENTSAccess().getLeftSquareBracketKeyword_1_0());
    }
this_INT_2=RULE_INT
    { 
    newLeafNode(this_INT_2, grammarAccess.getAGENTSAccess().getINTTerminalRuleCall_1_1()); 
    }
	otherlv_3=']' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAGENTSAccess().getRightSquareBracketKeyword_1_2());
    }
)?)
;





// Entry rule entryRuleMATH_OP
entryRuleMATH_OP returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMATH_OPRule()); } 
	 iv_ruleMATH_OP=ruleMATH_OP 
	 { $current=$iv_ruleMATH_OP.current.getText(); }  
	 EOF 
;

// Rule MATH_OP
ruleMATH_OP returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='^' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMATH_OPAccess().getCircumflexAccentKeyword_0()); 
    }

    |
	kw='+' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMATH_OPAccess().getPlusSignKeyword_1()); 
    }

    |
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMATH_OPAccess().getHyphenMinusKeyword_2()); 
    }

    |
	kw='*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMATH_OPAccess().getAsteriskKeyword_3()); 
    }

    |
	kw='/' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMATH_OPAccess().getSolidusKeyword_4()); 
    }

    |
	kw='%' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMATH_OPAccess().getPercentSignKeyword_5()); 
    }
)
    ;





// Entry rule entryRuleNUMBER
entryRuleNUMBER returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getNUMBERRule()); } 
	 iv_ruleNUMBER=ruleNUMBER 
	 { $current=$iv_ruleNUMBER.current.getText(); }  
	 EOF 
;

// Rule NUMBER
ruleNUMBER returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_INT_0=RULE_INT    {
		$current.merge(this_INT_0);
    }

    { 
    newLeafNode(this_INT_0, grammarAccess.getNUMBERAccess().getINTTerminalRuleCall_0()); 
    }

    |    this_DOUBLE_1=RULE_DOUBLE    {
		$current.merge(this_DOUBLE_1);
    }

    { 
    newLeafNode(this_DOUBLE_1, grammarAccess.getNUMBERAccess().getDOUBLETerminalRuleCall_1()); 
    }

    |    this_DOUBLE_SCIENTIFIC_2=RULE_DOUBLE_SCIENTIFIC    {
		$current.merge(this_DOUBLE_SCIENTIFIC_2);
    }

    { 
    newLeafNode(this_DOUBLE_SCIENTIFIC_2, grammarAccess.getNUMBERAccess().getDOUBLE_SCIENTIFICTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleLOC
entryRuleLOC returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getLOCRule()); } 
	 iv_ruleLOC=ruleLOC 
	 { $current=$iv_ruleLOC.current.getText(); }  
	 EOF 
;

// Rule LOC
ruleLOC returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='(' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLOCAccess().getLeftParenthesisKeyword_0()); 
    }
    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getLOCAccess().getINTTerminalRuleCall_1()); 
    }

	kw=',' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLOCAccess().getCommaKeyword_2()); 
    }
    this_INT_3=RULE_INT    {
		$current.merge(this_INT_3);
    }

    { 
    newLeafNode(this_INT_3, grammarAccess.getLOCAccess().getINTTerminalRuleCall_3()); 
    }

	kw=')' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLOCAccess().getRightParenthesisKeyword_4()); 
    }
)
    ;





// Entry rule entryRuleAGENT
entryRuleAGENT returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getAGENTRule()); } 
	 iv_ruleAGENT=ruleAGENT 
	 { $current=$iv_ruleAGENT.current.getText(); }  
	 EOF 
;

// Rule AGENT
ruleAGENT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getAGENTAccess().getIDTerminalRuleCall_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getAGENTAccess().getLOCParserRuleCall_1()); 
    }
    this_LOC_1=ruleLOC    {
		$current.merge(this_LOC_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleMATH_Expr
entryRuleMATH_Expr returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMATH_ExprRule()); } 
	 iv_ruleMATH_Expr=ruleMATH_Expr 
	 { $current=$iv_ruleMATH_Expr.current.getText(); }  
	 EOF 
;

// Rule MATH_Expr
ruleMATH_Expr returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMATH_ExprAccess().getTerminal_Math_ExprParserRuleCall_0()); 
    }
    this_Terminal_Math_Expr_0=ruleTerminal_Math_Expr    {
		$current.merge(this_Terminal_Math_Expr_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(
    { 
        newCompositeNode(grammarAccess.getMATH_ExprAccess().getMATH_OPParserRuleCall_1_0()); 
    }
    this_MATH_OP_1=ruleMATH_OP    {
		$current.merge(this_MATH_OP_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    { 
        newCompositeNode(grammarAccess.getMATH_ExprAccess().getTerminal_Math_ExprParserRuleCall_1_1()); 
    }
    this_Terminal_Math_Expr_2=ruleTerminal_Math_Expr    {
		$current.merge(this_Terminal_Math_Expr_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)*)
    ;





// Entry rule entryRuleTerminal_Math_Expr
entryRuleTerminal_Math_Expr returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getTerminal_Math_ExprRule()); } 
	 iv_ruleTerminal_Math_Expr=ruleTerminal_Math_Expr 
	 { $current=$iv_ruleTerminal_Math_Expr.current.getText(); }  
	 EOF 
;

// Rule Terminal_Math_Expr
ruleTerminal_Math_Expr returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='(' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTerminal_Math_ExprAccess().getLeftParenthesisKeyword_0_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getTerminal_Math_ExprAccess().getMATH_ExprParserRuleCall_0_1()); 
    }
    this_MATH_Expr_1=ruleMATH_Expr    {
		$current.merge(this_MATH_Expr_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }

	kw=')' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTerminal_Math_ExprAccess().getRightParenthesisKeyword_0_2()); 
    }
)
    |
    { 
        newCompositeNode(grammarAccess.getTerminal_Math_ExprAccess().getNUMBERParserRuleCall_1()); 
    }
    this_NUMBER_3=ruleNUMBER    {
		$current.merge(this_NUMBER_3);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





RULE_DOUBLE : ('0'..'9')+ '.' ('0'..'9')+;

RULE_EXPONENT : ('e'|'E') ('+'|'-')? ('0'..'9')+;

RULE_DOUBLE_SCIENTIFIC : (('0'..'9')+ '.' ('0'..'9')* RULE_EXPONENT|('0'..'9')+ RULE_EXPONENT);

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


