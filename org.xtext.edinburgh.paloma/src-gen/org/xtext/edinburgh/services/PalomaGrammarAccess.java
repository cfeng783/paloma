/*
* generated by Xtext
*/
package org.xtext.edinburgh.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class PalomaGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cParamsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cParamsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cParamsParamParserRuleCall_1_0 = (RuleCall)cParamsAssignment_1.eContents().get(0);
		private final Keyword cStatesKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cStatesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cStatesAgentStateParserRuleCall_3_0 = (RuleCall)cStatesAssignment_3.eContents().get(0);
		private final Keyword cAgentsKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cPopulationAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cPopulationPOPULATIONParserRuleCall_5_0 = (RuleCall)cPopulationAssignment_5.eContents().get(0);
		
		//Model:
		//	"#params" params+=Param* "#states" states+=AgentState+ "#agents" population=POPULATION;
		public ParserRule getRule() { return rule; }

		//"#params" params+=Param* "#states" states+=AgentState+ "#agents" population=POPULATION
		public Group getGroup() { return cGroup; }

		//"#params"
		public Keyword getParamsKeyword_0() { return cParamsKeyword_0; }

		//params+=Param*
		public Assignment getParamsAssignment_1() { return cParamsAssignment_1; }

		//Param
		public RuleCall getParamsParamParserRuleCall_1_0() { return cParamsParamParserRuleCall_1_0; }

		//"#states"
		public Keyword getStatesKeyword_2() { return cStatesKeyword_2; }

		//states+=AgentState+
		public Assignment getStatesAssignment_3() { return cStatesAssignment_3; }

		//AgentState
		public RuleCall getStatesAgentStateParserRuleCall_3_0() { return cStatesAgentStateParserRuleCall_3_0; }

		//"#agents"
		public Keyword getAgentsKeyword_4() { return cAgentsKeyword_4; }

		//population=POPULATION
		public Assignment getPopulationAssignment_5() { return cPopulationAssignment_5; }

		//POPULATION
		public RuleCall getPopulationPOPULATIONParserRuleCall_5_0() { return cPopulationPOPULATIONParserRuleCall_5_0; }
	}

	public class ParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Param");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cParamKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValueMATH_ExprParserRuleCall_3_0 = (RuleCall)cValueAssignment_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Param:
		//	"param" name=ID "=" value=MATH_Expr ";";
		public ParserRule getRule() { return rule; }

		//"param" name=ID "=" value=MATH_Expr ";"
		public Group getGroup() { return cGroup; }

		//"param"
		public Keyword getParamKeyword_0() { return cParamKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"="
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }

		//value=MATH_Expr
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }

		//MATH_Expr
		public RuleCall getValueMATH_ExprParserRuleCall_3_0() { return cValueMATH_ExprParserRuleCall_3_0; }

		//";"
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}

	public class AgentStateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AgentState");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameAGENTParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPrefixsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPrefixsPrefixParserRuleCall_2_0 = (RuleCall)cPrefixsAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cPlusSignKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cPrefixsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cPrefixsPrefixParserRuleCall_3_1_0 = (RuleCall)cPrefixsAssignment_3_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//AgentState:
		//	name=AGENT ":=" prefixs+=Prefix ("+" prefixs+=Prefix)* ";";
		public ParserRule getRule() { return rule; }

		//name=AGENT ":=" prefixs+=Prefix ("+" prefixs+=Prefix)* ";"
		public Group getGroup() { return cGroup; }

		//name=AGENT
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//AGENT
		public RuleCall getNameAGENTParserRuleCall_0_0() { return cNameAGENTParserRuleCall_0_0; }

		//":="
		public Keyword getColonEqualsSignKeyword_1() { return cColonEqualsSignKeyword_1; }

		//prefixs+=Prefix
		public Assignment getPrefixsAssignment_2() { return cPrefixsAssignment_2; }

		//Prefix
		public RuleCall getPrefixsPrefixParserRuleCall_2_0() { return cPrefixsPrefixParserRuleCall_2_0; }

		//("+" prefixs+=Prefix)*
		public Group getGroup_3() { return cGroup_3; }

		//"+"
		public Keyword getPlusSignKeyword_3_0() { return cPlusSignKeyword_3_0; }

		//prefixs+=Prefix
		public Assignment getPrefixsAssignment_3_1() { return cPrefixsAssignment_3_1; }

		//Prefix
		public RuleCall getPrefixsPrefixParserRuleCall_3_1_0() { return cPrefixsPrefixParserRuleCall_3_1_0; }

		//";"
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}

	public class PrefixElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Prefix");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cActionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cActionACTIONParserRuleCall_0_0 = (RuleCall)cActionAssignment_0.eContents().get(0);
		private final Assignment cContinueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cContinueAGENTParserRuleCall_1_0 = (RuleCall)cContinueAssignment_1.eContents().get(0);
		
		//Prefix:
		//	action=ACTION continue=AGENT;
		public ParserRule getRule() { return rule; }

		//action=ACTION continue=AGENT
		public Group getGroup() { return cGroup; }

		//action=ACTION
		public Assignment getActionAssignment_0() { return cActionAssignment_0; }

		//ACTION
		public RuleCall getActionACTIONParserRuleCall_0_0() { return cActionACTIONParserRuleCall_0_0; }

		//continue=AGENT
		public Assignment getContinueAssignment_1() { return cContinueAssignment_1; }

		//AGENT
		public RuleCall getContinueAGENTParserRuleCall_1_0() { return cContinueAGENTParserRuleCall_1_0; }
	}

	public class ACTIONElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ACTION");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cACT_SpNoMsgParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cACT_SpBrParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cACT_SpUniParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cACT_InBrParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cACT_InUniParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//ACTION:
		//	ACT_SpNoMsg | ACT_SpBr | ACT_SpUni | ACT_InBr | ACT_InUni;
		public ParserRule getRule() { return rule; }

		//ACT_SpNoMsg | ACT_SpBr | ACT_SpUni | ACT_InBr | ACT_InUni
		public Alternatives getAlternatives() { return cAlternatives; }

		//ACT_SpNoMsg
		public RuleCall getACT_SpNoMsgParserRuleCall_0() { return cACT_SpNoMsgParserRuleCall_0; }

		//ACT_SpBr
		public RuleCall getACT_SpBrParserRuleCall_1() { return cACT_SpBrParserRuleCall_1; }

		//ACT_SpUni
		public RuleCall getACT_SpUniParserRuleCall_2() { return cACT_SpUniParserRuleCall_2; }

		//ACT_InBr
		public RuleCall getACT_InBrParserRuleCall_3() { return cACT_InBrParserRuleCall_3; }

		//ACT_InUni
		public RuleCall getACT_InUniParserRuleCall_4() { return cACT_InUniParserRuleCall_4; }
	}

	public class ACT_SpNoMsgElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ACT_SpNoMsg");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cCommaKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cRateAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cRateRATE_ExprParserRuleCall_3_0 = (RuleCall)cRateAssignment_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cFullStopKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ACT_SpNoMsg:
		//	"(" name=ID "," rate=RATE_Expr ")" ".";
		public ParserRule getRule() { return rule; }

		//"(" name=ID "," rate=RATE_Expr ")" "."
		public Group getGroup() { return cGroup; }

		//"("
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//","
		public Keyword getCommaKeyword_2() { return cCommaKeyword_2; }

		//rate=RATE_Expr
		public Assignment getRateAssignment_3() { return cRateAssignment_3; }

		//RATE_Expr
		public RuleCall getRateRATE_ExprParserRuleCall_3_0() { return cRateRATE_ExprParserRuleCall_3_0; }

		//")"
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }

		//"."
		public Keyword getFullStopKeyword_5() { return cFullStopKeyword_5; }
	}

	public class ACT_SpBrElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ACT_SpBr");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cExclamationMarkLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cCommaKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cRateAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cRateRATE_ExprParserRuleCall_3_0 = (RuleCall)cRateAssignment_3.eContents().get(0);
		private final Keyword cRightParenthesisCommercialAtKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cIRKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cRangeAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cRangeIRangeParserRuleCall_7_0 = (RuleCall)cRangeAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketFullStopKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//ACT_SpBr:
		//	"!(" name=ID "," rate=RATE_Expr ")@" "IR" "{" range=IRange "}.";
		public ParserRule getRule() { return rule; }

		//"!(" name=ID "," rate=RATE_Expr ")@" "IR" "{" range=IRange "}."
		public Group getGroup() { return cGroup; }

		//"!("
		public Keyword getExclamationMarkLeftParenthesisKeyword_0() { return cExclamationMarkLeftParenthesisKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//","
		public Keyword getCommaKeyword_2() { return cCommaKeyword_2; }

		//rate=RATE_Expr
		public Assignment getRateAssignment_3() { return cRateAssignment_3; }

		//RATE_Expr
		public RuleCall getRateRATE_ExprParserRuleCall_3_0() { return cRateRATE_ExprParserRuleCall_3_0; }

		//")@"
		public Keyword getRightParenthesisCommercialAtKeyword_4() { return cRightParenthesisCommercialAtKeyword_4; }

		//"IR"
		public Keyword getIRKeyword_5() { return cIRKeyword_5; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }

		//range=IRange
		public Assignment getRangeAssignment_7() { return cRangeAssignment_7; }

		//IRange
		public RuleCall getRangeIRangeParserRuleCall_7_0() { return cRangeIRangeParserRuleCall_7_0; }

		//"}."
		public Keyword getRightCurlyBracketFullStopKeyword_8() { return cRightCurlyBracketFullStopKeyword_8; }
	}

	public class ACT_SpUniElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ACT_SpUni");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cExclamationMarkExclamationMarkLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cCommaKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cRateAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cRateRATE_ExprParserRuleCall_3_0 = (RuleCall)cRateAssignment_3.eContents().get(0);
		private final Keyword cRightParenthesisCommercialAtKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cIRKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cRangeAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cRangeIRangeParserRuleCall_7_0 = (RuleCall)cRangeAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketFullStopKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//ACT_SpUni:
		//	"!!(" name=ID "," rate=RATE_Expr ")@" "IR" "{" range=IRange "}.";
		public ParserRule getRule() { return rule; }

		//"!!(" name=ID "," rate=RATE_Expr ")@" "IR" "{" range=IRange "}."
		public Group getGroup() { return cGroup; }

		//"!!("
		public Keyword getExclamationMarkExclamationMarkLeftParenthesisKeyword_0() { return cExclamationMarkExclamationMarkLeftParenthesisKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//","
		public Keyword getCommaKeyword_2() { return cCommaKeyword_2; }

		//rate=RATE_Expr
		public Assignment getRateAssignment_3() { return cRateAssignment_3; }

		//RATE_Expr
		public RuleCall getRateRATE_ExprParserRuleCall_3_0() { return cRateRATE_ExprParserRuleCall_3_0; }

		//")@"
		public Keyword getRightParenthesisCommercialAtKeyword_4() { return cRightParenthesisCommercialAtKeyword_4; }

		//"IR"
		public Keyword getIRKeyword_5() { return cIRKeyword_5; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }

		//range=IRange
		public Assignment getRangeAssignment_7() { return cRangeAssignment_7; }

		//IRange
		public RuleCall getRangeIRangeParserRuleCall_7_0() { return cRangeIRangeParserRuleCall_7_0; }

		//"}."
		public Keyword getRightCurlyBracketFullStopKeyword_8() { return cRightCurlyBracketFullStopKeyword_8; }
	}

	public class ACT_InBrElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ACT_InBr");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cQuestionMarkLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cCommaKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cRateAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cRateRATE_ExprParserRuleCall_3_0 = (RuleCall)cRateAssignment_3.eContents().get(0);
		private final Keyword cRightParenthesisCommercialAtKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cPrKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cValueAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cValuePR_ExprParserRuleCall_7_0 = (RuleCall)cValueAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketFullStopKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//ACT_InBr:
		//	"?(" name=ID "," rate=RATE_Expr ")@" "Pr" "{" value=PR_Expr "}.";
		public ParserRule getRule() { return rule; }

		//"?(" name=ID "," rate=RATE_Expr ")@" "Pr" "{" value=PR_Expr "}."
		public Group getGroup() { return cGroup; }

		//"?("
		public Keyword getQuestionMarkLeftParenthesisKeyword_0() { return cQuestionMarkLeftParenthesisKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//","
		public Keyword getCommaKeyword_2() { return cCommaKeyword_2; }

		//rate=RATE_Expr
		public Assignment getRateAssignment_3() { return cRateAssignment_3; }

		//RATE_Expr
		public RuleCall getRateRATE_ExprParserRuleCall_3_0() { return cRateRATE_ExprParserRuleCall_3_0; }

		//")@"
		public Keyword getRightParenthesisCommercialAtKeyword_4() { return cRightParenthesisCommercialAtKeyword_4; }

		//"Pr"
		public Keyword getPrKeyword_5() { return cPrKeyword_5; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }

		//value=PR_Expr
		public Assignment getValueAssignment_7() { return cValueAssignment_7; }

		//PR_Expr
		public RuleCall getValuePR_ExprParserRuleCall_7_0() { return cValuePR_ExprParserRuleCall_7_0; }

		//"}."
		public Keyword getRightCurlyBracketFullStopKeyword_8() { return cRightCurlyBracketFullStopKeyword_8; }
	}

	public class ACT_InUniElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ACT_InUni");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cQuestionMarkQuestionMarkLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cCommaKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cRateAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cRateRATE_ExprParserRuleCall_3_0 = (RuleCall)cRateAssignment_3.eContents().get(0);
		private final Keyword cRightParenthesisCommercialAtKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cWtKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cValueAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cValuePR_ExprParserRuleCall_7_0 = (RuleCall)cValueAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketFullStopKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//ACT_InUni:
		//	"??(" name=ID "," rate=RATE_Expr ")@" "Wt" "{" value=PR_Expr "}.";
		public ParserRule getRule() { return rule; }

		//"??(" name=ID "," rate=RATE_Expr ")@" "Wt" "{" value=PR_Expr "}."
		public Group getGroup() { return cGroup; }

		//"??("
		public Keyword getQuestionMarkQuestionMarkLeftParenthesisKeyword_0() { return cQuestionMarkQuestionMarkLeftParenthesisKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//","
		public Keyword getCommaKeyword_2() { return cCommaKeyword_2; }

		//rate=RATE_Expr
		public Assignment getRateAssignment_3() { return cRateAssignment_3; }

		//RATE_Expr
		public RuleCall getRateRATE_ExprParserRuleCall_3_0() { return cRateRATE_ExprParserRuleCall_3_0; }

		//")@"
		public Keyword getRightParenthesisCommercialAtKeyword_4() { return cRightParenthesisCommercialAtKeyword_4; }

		//"Wt"
		public Keyword getWtKeyword_5() { return cWtKeyword_5; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }

		//value=PR_Expr
		public Assignment getValueAssignment_7() { return cValueAssignment_7; }

		//PR_Expr
		public RuleCall getValuePR_ExprParserRuleCall_7_0() { return cValuePR_ExprParserRuleCall_7_0; }

		//"}."
		public Keyword getRightCurlyBracketFullStopKeyword_8() { return cRightCurlyBracketFullStopKeyword_8; }
	}

	public class IRangeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "IRange");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cLocalKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cAllKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Keyword cRangeKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final RuleCall cRATE_ExprParserRuleCall_2_2 = (RuleCall)cGroup_2.eContents().get(2);
		private final Keyword cRightParenthesisKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final RuleCall cLOCParserRuleCall_3_0 = (RuleCall)cGroup_3.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Keyword cCommaKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final RuleCall cLOCParserRuleCall_3_1_1 = (RuleCall)cGroup_3_1.eContents().get(1);
		
		//IRange:
		//	"local" | "all" | "range" "(" RATE_Expr ")" | LOC ("," LOC)*;
		public ParserRule getRule() { return rule; }

		//"local" | "all" | "range" "(" RATE_Expr ")" | LOC ("," LOC)*
		public Alternatives getAlternatives() { return cAlternatives; }

		//"local"
		public Keyword getLocalKeyword_0() { return cLocalKeyword_0; }

		//"all"
		public Keyword getAllKeyword_1() { return cAllKeyword_1; }

		//"range" "(" RATE_Expr ")"
		public Group getGroup_2() { return cGroup_2; }

		//"range"
		public Keyword getRangeKeyword_2_0() { return cRangeKeyword_2_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_2_1() { return cLeftParenthesisKeyword_2_1; }

		//RATE_Expr
		public RuleCall getRATE_ExprParserRuleCall_2_2() { return cRATE_ExprParserRuleCall_2_2; }

		//")"
		public Keyword getRightParenthesisKeyword_2_3() { return cRightParenthesisKeyword_2_3; }

		//LOC ("," LOC)*
		public Group getGroup_3() { return cGroup_3; }

		//LOC
		public RuleCall getLOCParserRuleCall_3_0() { return cLOCParserRuleCall_3_0; }

		//("," LOC)*
		public Group getGroup_3_1() { return cGroup_3_1; }

		//","
		public Keyword getCommaKeyword_3_1_0() { return cCommaKeyword_3_1_0; }

		//LOC
		public RuleCall getLOCParserRuleCall_3_1_1() { return cLOCParserRuleCall_3_1_1; }
	}

	public class PR_ExprElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PR_Expr");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPrEAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cPrETerminal_PR_ExprParserRuleCall_0_0 = (RuleCall)cPrEAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cMATH_OPParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Assignment cPrEAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cPrETerminal_PR_ExprParserRuleCall_1_1_0 = (RuleCall)cPrEAssignment_1_1.eContents().get(0);
		
		//PR_Expr:
		//	prE+=Terminal_PR_Expr (MATH_OP prE+=Terminal_PR_Expr)*;
		public ParserRule getRule() { return rule; }

		//prE+=Terminal_PR_Expr (MATH_OP prE+=Terminal_PR_Expr)*
		public Group getGroup() { return cGroup; }

		//prE+=Terminal_PR_Expr
		public Assignment getPrEAssignment_0() { return cPrEAssignment_0; }

		//Terminal_PR_Expr
		public RuleCall getPrETerminal_PR_ExprParserRuleCall_0_0() { return cPrETerminal_PR_ExprParserRuleCall_0_0; }

		//(MATH_OP prE+=Terminal_PR_Expr)*
		public Group getGroup_1() { return cGroup_1; }

		//MATH_OP
		public RuleCall getMATH_OPParserRuleCall_1_0() { return cMATH_OPParserRuleCall_1_0; }

		//prE+=Terminal_PR_Expr
		public Assignment getPrEAssignment_1_1() { return cPrEAssignment_1_1; }

		//Terminal_PR_Expr
		public RuleCall getPrETerminal_PR_ExprParserRuleCall_1_1_0() { return cPrETerminal_PR_ExprParserRuleCall_1_1_0; }
	}

	public class Terminal_PR_ExprElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Terminal_PR_Expr");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final RuleCall cPR_ExprParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Alternatives cAlternatives_1 = (Alternatives)cAlternatives.eContents().get(1);
		private final RuleCall cNUMBERParserRuleCall_1_0 = (RuleCall)cAlternatives_1.eContents().get(0);
		private final Assignment cLinkedParamAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cLinkedParamIDTerminalRuleCall_1_1_0 = (RuleCall)cLinkedParamAssignment_1_1.eContents().get(0);
		private final RuleCall cDistParserRuleCall_1_2 = (RuleCall)cAlternatives_1.eContents().get(2);
		private final RuleCall cAGENT_NUMParserRuleCall_1_3 = (RuleCall)cAlternatives_1.eContents().get(3);
		
		//Terminal_PR_Expr:
		//	"(" PR_Expr ")" | (NUMBER | linkedParam=ID | Dist | AGENT_NUM);
		public ParserRule getRule() { return rule; }

		//"(" PR_Expr ")" | (NUMBER | linkedParam=ID | Dist | AGENT_NUM)
		public Alternatives getAlternatives() { return cAlternatives; }

		//"(" PR_Expr ")"
		public Group getGroup_0() { return cGroup_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_0_0() { return cLeftParenthesisKeyword_0_0; }

		//PR_Expr
		public RuleCall getPR_ExprParserRuleCall_0_1() { return cPR_ExprParserRuleCall_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_0_2() { return cRightParenthesisKeyword_0_2; }

		//NUMBER | linkedParam=ID | Dist | AGENT_NUM
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//NUMBER
		public RuleCall getNUMBERParserRuleCall_1_0() { return cNUMBERParserRuleCall_1_0; }

		//linkedParam=ID
		public Assignment getLinkedParamAssignment_1_1() { return cLinkedParamAssignment_1_1; }

		//ID
		public RuleCall getLinkedParamIDTerminalRuleCall_1_1_0() { return cLinkedParamIDTerminalRuleCall_1_1_0; }

		//Dist
		public RuleCall getDistParserRuleCall_1_2() { return cDistParserRuleCall_1_2; }

		//AGENT_NUM
		public RuleCall getAGENT_NUMParserRuleCall_1_3() { return cAGENT_NUMParserRuleCall_1_3; }
	}

	public class RATE_ExprElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RATE_Expr");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cRtAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cRtTerminal_RATE_ExprParserRuleCall_0_0 = (RuleCall)cRtAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cMATH_OPParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Assignment cRtAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cRtTerminal_RATE_ExprParserRuleCall_1_1_0 = (RuleCall)cRtAssignment_1_1.eContents().get(0);
		
		//RATE_Expr:
		//	rt+=Terminal_RATE_Expr (MATH_OP rt+=Terminal_RATE_Expr)*;
		public ParserRule getRule() { return rule; }

		//rt+=Terminal_RATE_Expr (MATH_OP rt+=Terminal_RATE_Expr)*
		public Group getGroup() { return cGroup; }

		//rt+=Terminal_RATE_Expr
		public Assignment getRtAssignment_0() { return cRtAssignment_0; }

		//Terminal_RATE_Expr
		public RuleCall getRtTerminal_RATE_ExprParserRuleCall_0_0() { return cRtTerminal_RATE_ExprParserRuleCall_0_0; }

		//(MATH_OP rt+=Terminal_RATE_Expr)*
		public Group getGroup_1() { return cGroup_1; }

		//MATH_OP
		public RuleCall getMATH_OPParserRuleCall_1_0() { return cMATH_OPParserRuleCall_1_0; }

		//rt+=Terminal_RATE_Expr
		public Assignment getRtAssignment_1_1() { return cRtAssignment_1_1; }

		//Terminal_RATE_Expr
		public RuleCall getRtTerminal_RATE_ExprParserRuleCall_1_1_0() { return cRtTerminal_RATE_ExprParserRuleCall_1_1_0; }
	}

	public class Terminal_RATE_ExprElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Terminal_RATE_Expr");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final RuleCall cRATE_ExprParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Alternatives cAlternatives_1 = (Alternatives)cAlternatives.eContents().get(1);
		private final RuleCall cNUMBERParserRuleCall_1_0 = (RuleCall)cAlternatives_1.eContents().get(0);
		private final Assignment cLinkedParamAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cLinkedParamIDTerminalRuleCall_1_1_0 = (RuleCall)cLinkedParamAssignment_1_1.eContents().get(0);
		
		//Terminal_RATE_Expr:
		//	"(" RATE_Expr ")" | (NUMBER | linkedParam=ID);
		public ParserRule getRule() { return rule; }

		//"(" RATE_Expr ")" | (NUMBER | linkedParam=ID)
		public Alternatives getAlternatives() { return cAlternatives; }

		//"(" RATE_Expr ")"
		public Group getGroup_0() { return cGroup_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_0_0() { return cLeftParenthesisKeyword_0_0; }

		//RATE_Expr
		public RuleCall getRATE_ExprParserRuleCall_0_1() { return cRATE_ExprParserRuleCall_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_0_2() { return cRightParenthesisKeyword_0_2; }

		//NUMBER | linkedParam=ID
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//NUMBER
		public RuleCall getNUMBERParserRuleCall_1_0() { return cNUMBERParserRuleCall_1_0; }

		//linkedParam=ID
		public Assignment getLinkedParamAssignment_1_1() { return cLinkedParamAssignment_1_1; }

		//ID
		public RuleCall getLinkedParamIDTerminalRuleCall_1_1_0() { return cLinkedParamIDTerminalRuleCall_1_1_0; }
	}

	public class DistElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Dist");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDistKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Keyword cLoc_sKeyword_2_0 = (Keyword)cAlternatives_2.eContents().get(0);
		private final Keyword cLoc_rKeyword_2_1 = (Keyword)cAlternatives_2.eContents().get(1);
		private final RuleCall cLOCParserRuleCall_2_2 = (RuleCall)cAlternatives_2.eContents().get(2);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final Keyword cLoc_sKeyword_4_0 = (Keyword)cAlternatives_4.eContents().get(0);
		private final Keyword cLoc_rKeyword_4_1 = (Keyword)cAlternatives_4.eContents().get(1);
		private final RuleCall cLOCParserRuleCall_4_2 = (RuleCall)cAlternatives_4.eContents().get(2);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Dist:
		//	"dist" "(" ("loc_s" | "loc_r" | LOC) "," ("loc_s" | "loc_r" | LOC) ")";
		public ParserRule getRule() { return rule; }

		//"dist" "(" ("loc_s" | "loc_r" | LOC) "," ("loc_s" | "loc_r" | LOC) ")"
		public Group getGroup() { return cGroup; }

		//"dist"
		public Keyword getDistKeyword_0() { return cDistKeyword_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }

		//"loc_s" | "loc_r" | LOC
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//"loc_s"
		public Keyword getLoc_sKeyword_2_0() { return cLoc_sKeyword_2_0; }

		//"loc_r"
		public Keyword getLoc_rKeyword_2_1() { return cLoc_rKeyword_2_1; }

		//LOC
		public RuleCall getLOCParserRuleCall_2_2() { return cLOCParserRuleCall_2_2; }

		//","
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }

		//"loc_s" | "loc_r" | LOC
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//"loc_s"
		public Keyword getLoc_sKeyword_4_0() { return cLoc_sKeyword_4_0; }

		//"loc_r"
		public Keyword getLoc_rKeyword_4_1() { return cLoc_rKeyword_4_1; }

		//LOC
		public RuleCall getLOCParserRuleCall_4_2() { return cLOCParserRuleCall_4_2; }

		//")"
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}

	public class AGENT_NUMElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AGENT_NUM");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVerticalLineKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTypeAGENTParserRuleCall_1_0 = (RuleCall)cTypeAssignment_1.eContents().get(0);
		private final Keyword cVerticalLineKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//AGENT_NUM:
		//	"|" type=AGENT "|";
		public ParserRule getRule() { return rule; }

		//"|" type=AGENT "|"
		public Group getGroup() { return cGroup; }

		//"|"
		public Keyword getVerticalLineKeyword_0() { return cVerticalLineKeyword_0; }

		//type=AGENT
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }

		//AGENT
		public RuleCall getTypeAGENTParserRuleCall_1_0() { return cTypeAGENTParserRuleCall_1_0; }

		//"|"
		public Keyword getVerticalLineKeyword_2() { return cVerticalLineKeyword_2; }
	}

	public class POPULATIONElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "POPULATION");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPopuAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cPopuAGENTSParserRuleCall_0_0 = (RuleCall)cPopuAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cVerticalLineVerticalLineKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cPopuAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cPopuAGENTSParserRuleCall_1_1_0 = (RuleCall)cPopuAssignment_1_1.eContents().get(0);
		
		//POPULATION:
		//	popu+=AGENTS ("||" popu+=AGENTS)*;
		public ParserRule getRule() { return rule; }

		//popu+=AGENTS ("||" popu+=AGENTS)*
		public Group getGroup() { return cGroup; }

		//popu+=AGENTS
		public Assignment getPopuAssignment_0() { return cPopuAssignment_0; }

		//AGENTS
		public RuleCall getPopuAGENTSParserRuleCall_0_0() { return cPopuAGENTSParserRuleCall_0_0; }

		//("||" popu+=AGENTS)*
		public Group getGroup_1() { return cGroup_1; }

		//"||"
		public Keyword getVerticalLineVerticalLineKeyword_1_0() { return cVerticalLineVerticalLineKeyword_1_0; }

		//popu+=AGENTS
		public Assignment getPopuAssignment_1_1() { return cPopuAssignment_1_1; }

		//AGENTS
		public RuleCall getPopuAGENTSParserRuleCall_1_1_0() { return cPopuAGENTSParserRuleCall_1_1_0; }
	}

	public class AGENTSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AGENTS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeAGENTParserRuleCall_0_0 = (RuleCall)cTypeAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//AGENTS:
		//	type=AGENT ("[" INT "]")?;
		public ParserRule getRule() { return rule; }

		//type=AGENT ("[" INT "]")?
		public Group getGroup() { return cGroup; }

		//type=AGENT
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }

		//AGENT
		public RuleCall getTypeAGENTParserRuleCall_0_0() { return cTypeAGENTParserRuleCall_0_0; }

		//("[" INT "]")?
		public Group getGroup_1() { return cGroup_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_1_0() { return cLeftSquareBracketKeyword_1_0; }

		//INT
		public RuleCall getINTTerminalRuleCall_1_1() { return cINTTerminalRuleCall_1_1; }

		//"]"
		public Keyword getRightSquareBracketKeyword_1_2() { return cRightSquareBracketKeyword_1_2; }
	}

	public class MATH_OPElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MATH_OP");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cCircumflexAccentKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cPlusSignKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cAsteriskKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cSolidusKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cPercentSignKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		
		//MATH_OP:
		//	"^" | "+" | "-" | "*" | "/" | "%";
		public ParserRule getRule() { return rule; }

		//"^" | "+" | "-" | "*" | "/" | "%"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"^"
		public Keyword getCircumflexAccentKeyword_0() { return cCircumflexAccentKeyword_0; }

		//"+"
		public Keyword getPlusSignKeyword_1() { return cPlusSignKeyword_1; }

		//"-"
		public Keyword getHyphenMinusKeyword_2() { return cHyphenMinusKeyword_2; }

		//"*"
		public Keyword getAsteriskKeyword_3() { return cAsteriskKeyword_3; }

		//"/"
		public Keyword getSolidusKeyword_4() { return cSolidusKeyword_4; }

		//"%"
		public Keyword getPercentSignKeyword_5() { return cPercentSignKeyword_5; }
	}

	public class NUMBERElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NUMBER");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDOUBLETerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cDOUBLE_SCIENTIFICTerminalRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//NUMBER:
		//	INT | DOUBLE | DOUBLE_SCIENTIFIC;
		public ParserRule getRule() { return rule; }

		//INT | DOUBLE | DOUBLE_SCIENTIFIC
		public Alternatives getAlternatives() { return cAlternatives; }

		//INT
		public RuleCall getINTTerminalRuleCall_0() { return cINTTerminalRuleCall_0; }

		//DOUBLE
		public RuleCall getDOUBLETerminalRuleCall_1() { return cDOUBLETerminalRuleCall_1; }

		//DOUBLE_SCIENTIFIC
		public RuleCall getDOUBLE_SCIENTIFICTerminalRuleCall_2() { return cDOUBLE_SCIENTIFICTerminalRuleCall_2; }
	}

	public class LOCElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LOC");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cINTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//LOC:
		//	"(" INT "," INT ")";
		public ParserRule getRule() { return rule; }

		//"(" INT "," INT ")"
		public Group getGroup() { return cGroup; }

		//"("
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }

		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }

		//","
		public Keyword getCommaKeyword_2() { return cCommaKeyword_2; }

		//INT
		public RuleCall getINTTerminalRuleCall_3() { return cINTTerminalRuleCall_3; }

		//")"
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}

	public class AGENTElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AGENT");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall cLOCParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//AGENT:
		//	ID LOC;
		public ParserRule getRule() { return rule; }

		//ID LOC
		public Group getGroup() { return cGroup; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//LOC
		public RuleCall getLOCParserRuleCall_1() { return cLOCParserRuleCall_1; }
	}

	public class MATH_ExprElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MATH_Expr");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTerminal_Math_ExprParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cMATH_OPParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final RuleCall cTerminal_Math_ExprParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//MATH_Expr:
		//	Terminal_Math_Expr (MATH_OP Terminal_Math_Expr)*;
		public ParserRule getRule() { return rule; }

		//Terminal_Math_Expr (MATH_OP Terminal_Math_Expr)*
		public Group getGroup() { return cGroup; }

		//Terminal_Math_Expr
		public RuleCall getTerminal_Math_ExprParserRuleCall_0() { return cTerminal_Math_ExprParserRuleCall_0; }

		//(MATH_OP Terminal_Math_Expr)*
		public Group getGroup_1() { return cGroup_1; }

		//MATH_OP
		public RuleCall getMATH_OPParserRuleCall_1_0() { return cMATH_OPParserRuleCall_1_0; }

		//Terminal_Math_Expr
		public RuleCall getTerminal_Math_ExprParserRuleCall_1_1() { return cTerminal_Math_ExprParserRuleCall_1_1; }
	}

	public class Terminal_Math_ExprElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Terminal_Math_Expr");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final RuleCall cMATH_ExprParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final RuleCall cNUMBERParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Terminal_Math_Expr:
		//	"(" MATH_Expr ")" | NUMBER;
		public ParserRule getRule() { return rule; }

		//"(" MATH_Expr ")" | NUMBER
		public Alternatives getAlternatives() { return cAlternatives; }

		//"(" MATH_Expr ")"
		public Group getGroup_0() { return cGroup_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_0_0() { return cLeftParenthesisKeyword_0_0; }

		//MATH_Expr
		public RuleCall getMATH_ExprParserRuleCall_0_1() { return cMATH_ExprParserRuleCall_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_0_2() { return cRightParenthesisKeyword_0_2; }

		//NUMBER
		public RuleCall getNUMBERParserRuleCall_1() { return cNUMBERParserRuleCall_1; }
	}
	
	
	private final ModelElements pModel;
	private final ParamElements pParam;
	private final AgentStateElements pAgentState;
	private final PrefixElements pPrefix;
	private final ACTIONElements pACTION;
	private final ACT_SpNoMsgElements pACT_SpNoMsg;
	private final ACT_SpBrElements pACT_SpBr;
	private final ACT_SpUniElements pACT_SpUni;
	private final ACT_InBrElements pACT_InBr;
	private final ACT_InUniElements pACT_InUni;
	private final IRangeElements pIRange;
	private final PR_ExprElements pPR_Expr;
	private final Terminal_PR_ExprElements pTerminal_PR_Expr;
	private final RATE_ExprElements pRATE_Expr;
	private final Terminal_RATE_ExprElements pTerminal_RATE_Expr;
	private final DistElements pDist;
	private final AGENT_NUMElements pAGENT_NUM;
	private final POPULATIONElements pPOPULATION;
	private final AGENTSElements pAGENTS;
	private final TerminalRule tDOUBLE;
	private final TerminalRule tEXPONENT;
	private final TerminalRule tDOUBLE_SCIENTIFIC;
	private final MATH_OPElements pMATH_OP;
	private final NUMBERElements pNUMBER;
	private final LOCElements pLOC;
	private final AGENTElements pAGENT;
	private final MATH_ExprElements pMATH_Expr;
	private final Terminal_Math_ExprElements pTerminal_Math_Expr;
	
	private final Grammar grammar;

	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public PalomaGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pModel = new ModelElements();
		this.pParam = new ParamElements();
		this.pAgentState = new AgentStateElements();
		this.pPrefix = new PrefixElements();
		this.pACTION = new ACTIONElements();
		this.pACT_SpNoMsg = new ACT_SpNoMsgElements();
		this.pACT_SpBr = new ACT_SpBrElements();
		this.pACT_SpUni = new ACT_SpUniElements();
		this.pACT_InBr = new ACT_InBrElements();
		this.pACT_InUni = new ACT_InUniElements();
		this.pIRange = new IRangeElements();
		this.pPR_Expr = new PR_ExprElements();
		this.pTerminal_PR_Expr = new Terminal_PR_ExprElements();
		this.pRATE_Expr = new RATE_ExprElements();
		this.pTerminal_RATE_Expr = new Terminal_RATE_ExprElements();
		this.pDist = new DistElements();
		this.pAGENT_NUM = new AGENT_NUMElements();
		this.pPOPULATION = new POPULATIONElements();
		this.pAGENTS = new AGENTSElements();
		this.tDOUBLE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "DOUBLE");
		this.tEXPONENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "EXPONENT");
		this.tDOUBLE_SCIENTIFIC = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "DOUBLE_SCIENTIFIC");
		this.pMATH_OP = new MATH_OPElements();
		this.pNUMBER = new NUMBERElements();
		this.pLOC = new LOCElements();
		this.pAGENT = new AGENTElements();
		this.pMATH_Expr = new MATH_ExprElements();
		this.pTerminal_Math_Expr = new Terminal_Math_ExprElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.edinburgh.Paloma".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//	"#params" params+=Param* "#states" states+=AgentState+ "#agents" population=POPULATION;
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}

	//Param:
	//	"param" name=ID "=" value=MATH_Expr ";";
	public ParamElements getParamAccess() {
		return pParam;
	}
	
	public ParserRule getParamRule() {
		return getParamAccess().getRule();
	}

	//AgentState:
	//	name=AGENT ":=" prefixs+=Prefix ("+" prefixs+=Prefix)* ";";
	public AgentStateElements getAgentStateAccess() {
		return pAgentState;
	}
	
	public ParserRule getAgentStateRule() {
		return getAgentStateAccess().getRule();
	}

	//Prefix:
	//	action=ACTION continue=AGENT;
	public PrefixElements getPrefixAccess() {
		return pPrefix;
	}
	
	public ParserRule getPrefixRule() {
		return getPrefixAccess().getRule();
	}

	//ACTION:
	//	ACT_SpNoMsg | ACT_SpBr | ACT_SpUni | ACT_InBr | ACT_InUni;
	public ACTIONElements getACTIONAccess() {
		return pACTION;
	}
	
	public ParserRule getACTIONRule() {
		return getACTIONAccess().getRule();
	}

	//ACT_SpNoMsg:
	//	"(" name=ID "," rate=RATE_Expr ")" ".";
	public ACT_SpNoMsgElements getACT_SpNoMsgAccess() {
		return pACT_SpNoMsg;
	}
	
	public ParserRule getACT_SpNoMsgRule() {
		return getACT_SpNoMsgAccess().getRule();
	}

	//ACT_SpBr:
	//	"!(" name=ID "," rate=RATE_Expr ")@" "IR" "{" range=IRange "}.";
	public ACT_SpBrElements getACT_SpBrAccess() {
		return pACT_SpBr;
	}
	
	public ParserRule getACT_SpBrRule() {
		return getACT_SpBrAccess().getRule();
	}

	//ACT_SpUni:
	//	"!!(" name=ID "," rate=RATE_Expr ")@" "IR" "{" range=IRange "}.";
	public ACT_SpUniElements getACT_SpUniAccess() {
		return pACT_SpUni;
	}
	
	public ParserRule getACT_SpUniRule() {
		return getACT_SpUniAccess().getRule();
	}

	//ACT_InBr:
	//	"?(" name=ID "," rate=RATE_Expr ")@" "Pr" "{" value=PR_Expr "}.";
	public ACT_InBrElements getACT_InBrAccess() {
		return pACT_InBr;
	}
	
	public ParserRule getACT_InBrRule() {
		return getACT_InBrAccess().getRule();
	}

	//ACT_InUni:
	//	"??(" name=ID "," rate=RATE_Expr ")@" "Wt" "{" value=PR_Expr "}.";
	public ACT_InUniElements getACT_InUniAccess() {
		return pACT_InUni;
	}
	
	public ParserRule getACT_InUniRule() {
		return getACT_InUniAccess().getRule();
	}

	//IRange:
	//	"local" | "all" | "range" "(" RATE_Expr ")" | LOC ("," LOC)*;
	public IRangeElements getIRangeAccess() {
		return pIRange;
	}
	
	public ParserRule getIRangeRule() {
		return getIRangeAccess().getRule();
	}

	//PR_Expr:
	//	prE+=Terminal_PR_Expr (MATH_OP prE+=Terminal_PR_Expr)*;
	public PR_ExprElements getPR_ExprAccess() {
		return pPR_Expr;
	}
	
	public ParserRule getPR_ExprRule() {
		return getPR_ExprAccess().getRule();
	}

	//Terminal_PR_Expr:
	//	"(" PR_Expr ")" | (NUMBER | linkedParam=ID | Dist | AGENT_NUM);
	public Terminal_PR_ExprElements getTerminal_PR_ExprAccess() {
		return pTerminal_PR_Expr;
	}
	
	public ParserRule getTerminal_PR_ExprRule() {
		return getTerminal_PR_ExprAccess().getRule();
	}

	//RATE_Expr:
	//	rt+=Terminal_RATE_Expr (MATH_OP rt+=Terminal_RATE_Expr)*;
	public RATE_ExprElements getRATE_ExprAccess() {
		return pRATE_Expr;
	}
	
	public ParserRule getRATE_ExprRule() {
		return getRATE_ExprAccess().getRule();
	}

	//Terminal_RATE_Expr:
	//	"(" RATE_Expr ")" | (NUMBER | linkedParam=ID);
	public Terminal_RATE_ExprElements getTerminal_RATE_ExprAccess() {
		return pTerminal_RATE_Expr;
	}
	
	public ParserRule getTerminal_RATE_ExprRule() {
		return getTerminal_RATE_ExprAccess().getRule();
	}

	//Dist:
	//	"dist" "(" ("loc_s" | "loc_r" | LOC) "," ("loc_s" | "loc_r" | LOC) ")";
	public DistElements getDistAccess() {
		return pDist;
	}
	
	public ParserRule getDistRule() {
		return getDistAccess().getRule();
	}

	//AGENT_NUM:
	//	"|" type=AGENT "|";
	public AGENT_NUMElements getAGENT_NUMAccess() {
		return pAGENT_NUM;
	}
	
	public ParserRule getAGENT_NUMRule() {
		return getAGENT_NUMAccess().getRule();
	}

	//POPULATION:
	//	popu+=AGENTS ("||" popu+=AGENTS)*;
	public POPULATIONElements getPOPULATIONAccess() {
		return pPOPULATION;
	}
	
	public ParserRule getPOPULATIONRule() {
		return getPOPULATIONAccess().getRule();
	}

	//AGENTS:
	//	type=AGENT ("[" INT "]")?;
	public AGENTSElements getAGENTSAccess() {
		return pAGENTS;
	}
	
	public ParserRule getAGENTSRule() {
		return getAGENTSAccess().getRule();
	}

	////terminal XINT: ('0'..'9')+;
	//terminal DOUBLE:
	//	"0".."9"+ "." "0".."9"+;
	public TerminalRule getDOUBLERule() {
		return tDOUBLE;
	} 

	//terminal EXPONENT:
	//	("e" | "E") ("+" | "-")? "0".."9"+;
	public TerminalRule getEXPONENTRule() {
		return tEXPONENT;
	} 

	//terminal DOUBLE_SCIENTIFIC:
	//	"0".."9"+ "." "0".."9"* EXPONENT | "0".."9"+ EXPONENT;
	public TerminalRule getDOUBLE_SCIENTIFICRule() {
		return tDOUBLE_SCIENTIFIC;
	} 

	//MATH_OP:
	//	"^" | "+" | "-" | "*" | "/" | "%";
	public MATH_OPElements getMATH_OPAccess() {
		return pMATH_OP;
	}
	
	public ParserRule getMATH_OPRule() {
		return getMATH_OPAccess().getRule();
	}

	//NUMBER:
	//	INT | DOUBLE | DOUBLE_SCIENTIFIC;
	public NUMBERElements getNUMBERAccess() {
		return pNUMBER;
	}
	
	public ParserRule getNUMBERRule() {
		return getNUMBERAccess().getRule();
	}

	//LOC:
	//	"(" INT "," INT ")";
	public LOCElements getLOCAccess() {
		return pLOC;
	}
	
	public ParserRule getLOCRule() {
		return getLOCAccess().getRule();
	}

	//AGENT:
	//	ID LOC;
	public AGENTElements getAGENTAccess() {
		return pAGENT;
	}
	
	public ParserRule getAGENTRule() {
		return getAGENTAccess().getRule();
	}

	//MATH_Expr:
	//	Terminal_Math_Expr (MATH_OP Terminal_Math_Expr)*;
	public MATH_ExprElements getMATH_ExprAccess() {
		return pMATH_Expr;
	}
	
	public ParserRule getMATH_ExprRule() {
		return getMATH_ExprAccess().getRule();
	}

	//Terminal_Math_Expr:
	//	"(" MATH_Expr ")" | NUMBER;
	public Terminal_Math_ExprElements getTerminal_Math_ExprAccess() {
		return pTerminal_Math_Expr;
	}
	
	public ParserRule getTerminal_Math_ExprRule() {
		return getTerminal_Math_ExprAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" . / * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\""))* "\"" | "\'" ("\\" .
	//	/ * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
