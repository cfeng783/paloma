/**
 * generated by Xtext
 */
package org.xtext.edinburgh.ui.labeling;

import com.google.inject.Inject;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider;
import org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider;
import org.xtext.edinburgh.paloma.ACT_InBr;
import org.xtext.edinburgh.paloma.ACT_InUni;
import org.xtext.edinburgh.paloma.ACT_SpBr;
import org.xtext.edinburgh.paloma.ACT_SpNoMsg;
import org.xtext.edinburgh.paloma.ACT_SpUni;
import org.xtext.edinburgh.paloma.POPULATION;
import org.xtext.edinburgh.paloma.Prefix;

/**
 * Provides labels for a EObjects.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#labelProvider
 */
@SuppressWarnings("all")
public class PalomaLabelProvider extends DefaultEObjectLabelProvider {
  @Inject
  public PalomaLabelProvider(final AdapterFactoryLabelProvider delegate) {
    super(delegate);
  }
  
  public String text(final POPULATION ele) {
    return "Agents";
  }
  
  public String text(final Prefix ele) {
    EList<EObject> _eContents = ele.eContents();
    for (final EObject childElement : _eContents) {
      EClass _eClass = childElement.eClass();
      String _name = _eClass.getName();
      String _string = _name.toString();
      boolean _equals = _string.equals("ACT_SpBr");
      if (_equals) {
        ACT_SpBr act = ((ACT_SpBr) childElement);
        String _name_1 = act.getName();
        String _plus = ("!" + _name_1);
        String _plus_1 = (_plus + " -> ");
        String _continue = ele.getContinue();
        return (_plus_1 + _continue);
      } else {
        EClass _eClass_1 = childElement.eClass();
        String _name_2 = _eClass_1.getName();
        String _string_1 = _name_2.toString();
        boolean _equals_1 = _string_1.equals("ACT_InBr");
        if (_equals_1) {
          ACT_InBr act_1 = ((ACT_InBr) childElement);
          String _name_3 = act_1.getName();
          String _plus_2 = ("?" + _name_3);
          String _plus_3 = (_plus_2 + " -> ");
          String _continue_1 = ele.getContinue();
          return (_plus_3 + _continue_1);
        } else {
          EClass _eClass_2 = childElement.eClass();
          String _name_4 = _eClass_2.getName();
          String _string_2 = _name_4.toString();
          boolean _equals_2 = _string_2.equals("ACT_SpUni");
          if (_equals_2) {
            ACT_SpUni act_2 = ((ACT_SpUni) childElement);
            String _name_5 = act_2.getName();
            String _plus_4 = ("!!" + _name_5);
            String _plus_5 = (_plus_4 + " -> ");
            String _continue_2 = ele.getContinue();
            return (_plus_5 + _continue_2);
          } else {
            EClass _eClass_3 = childElement.eClass();
            String _name_6 = _eClass_3.getName();
            String _string_3 = _name_6.toString();
            boolean _equals_3 = _string_3.equals("ACT_InUni");
            if (_equals_3) {
              ACT_InUni act_3 = ((ACT_InUni) childElement);
              String _name_7 = act_3.getName();
              String _plus_6 = ("??" + _name_7);
              String _plus_7 = (_plus_6 + " -> ");
              String _continue_3 = ele.getContinue();
              return (_plus_7 + _continue_3);
            } else {
              EClass _eClass_4 = childElement.eClass();
              String _name_8 = _eClass_4.getName();
              String _string_4 = _name_8.toString();
              boolean _equals_4 = _string_4.equals("ACT_SpNoMsg");
              if (_equals_4) {
                ACT_SpNoMsg act_4 = ((ACT_SpNoMsg) childElement);
                String _name_9 = act_4.getName();
                String _plus_8 = (_name_9 + " -> ");
                String _continue_4 = ele.getContinue();
                return (_plus_8 + _continue_4);
              }
            }
          }
        }
      }
    }
    return null;
  }
}
