/*
* generated by Xtext
*/
package org.xtext.edinburgh.ui.labeling

import com.google.inject.Inject
import org.xtext.edinburgh.paloma.POPULATION
import org.xtext.edinburgh.paloma.Prefix
import org.eclipse.emf.ecore.EObject
import org.xtext.edinburgh.paloma.ACT_SpBr
import org.xtext.edinburgh.paloma.ACT_InBr
import org.xtext.edinburgh.paloma.ACT_SpUni
import org.xtext.edinburgh.paloma.ACT_InUni
import org.xtext.edinburgh.paloma.ACT_SpNoMsg

/**
 * Provides labels for a EObjects.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#labelProvider
 */
class PalomaLabelProvider extends org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider {

	@Inject
	new(org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider delegate) {
		super(delegate);
	}

	// Labels and icons can be computed like this:
	
	def text(POPULATION ele) {
		'Agents'
	}
	
	def text(Prefix ele) {
		for(EObject childElement : ele.eContents()) {
			if(childElement.eClass().getName().toString().equals("ACT_SpBr")) {
				var act =  childElement as ACT_SpBr;
				return "!" + act.getName() + " -> " + ele.getContinue();
			}else if (childElement.eClass().getName().toString().equals("ACT_InBr")) {
				var act =  childElement as ACT_InBr;
				return "?" + act.getName() + " -> " + ele.getContinue();
			}else if (childElement.eClass().getName().toString().equals("ACT_SpUni")) {
				var act =  childElement as ACT_SpUni;
				return "!!" + act.getName() + " -> " + ele.getContinue();
			}else if (childElement.eClass().getName().toString().equals("ACT_InUni")) {
				var act =  childElement as ACT_InUni;
				return "??" + act.getName() + " -> " + ele.getContinue();
			}else if (childElement.eClass().getName().toString().equals("ACT_SpNoMsg")) {
				var act =  childElement as ACT_SpNoMsg;
				return act.getName() + " -> " + ele.getContinue();
			}
			//childElement.eClass().getName().toString()
		}
		return null;	
	}
}
