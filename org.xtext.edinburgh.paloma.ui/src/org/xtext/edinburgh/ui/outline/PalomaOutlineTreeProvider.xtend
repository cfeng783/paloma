/*
* generated by Xtext
*/
package org.xtext.edinburgh.ui.outline

import org.eclipse.emf.ecore.EObject
import org.eclipse.xtext.ui.editor.outline.IOutlineNode
import org.xtext.edinburgh.paloma.Prefix

/**
 * Customization of the default outline structure.
 *
 * see http://www.eclipse.org/Xtext/documentation.html#outline
 */
class PalomaOutlineTreeProvider extends org.eclipse.xtext.ui.editor.outline.impl.DefaultOutlineTreeProvider {
	
	override _createChildren(IOutlineNode parentNode, EObject modelElement) {
		for (EObject childElement : modelElement.eContents()) {
			if(childElement.eClass().getName().toString().equalsIgnoreCase("Param")) {
				createNode(parentNode, childElement);
			}else if(childElement.eClass().getName().toString().equalsIgnoreCase("Population")) {
				//childElement.setName("ds");
				createNode(parentNode, childElement);
			}else if(childElement.eClass().getName().toString().equalsIgnoreCase("AgentState")) {
				//childElement.setName("ds");
				createNode(parentNode, childElement);
			}else if(childElement.eClass().getName().toString().equalsIgnoreCase("AGENTS")) {
				//childElement.setName("ds");
				createNode(parentNode, childElement);
			}else if(childElement.eClass().getName().toString().equalsIgnoreCase("Prefix")) {
				//childElement.setName("ds");
				createNode(parentNode, childElement);
			}
			//System.out.println(childElement.toString());
			//System.out.println(childElement.toString());
			//createNode(parentNode, childElement);
		}
			
	}
	
	def _isLeaf(Prefix prefix) {
		return true;
	}
}
